//Asignación de pines a los componentes del circuito.
#define A 12
#define B 11
#define C 10
#define D 9
#define E 8
#define F 7
#define G 6
#define PULSADOR_INCREMENTO 4 
#define PULSADOR_DECREMENTO 3
#define PULSADOR_RESET 2
#define UNIDAD A4
#define DECENA A5
int digito = 0;
int incremento = 0;
int decremento = 0;
int reset = 0;
int incremento_antes = 0;
int decremento_antes = 0;
int reset_antes = 0;

void setup()//Inicialización de los pines.
{
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  
  pinMode(PULSADOR_INCREMENTO, INPUT_PULLUP);
  pinMode(PULSADOR_DECREMENTO, INPUT_PULLUP);
  pinMode(PULSADOR_RESET, INPUT_PULLUP);
  pinMode(UNIDAD, OUTPUT);
  pinMode(DECENA, OUTPUT);
  digitalWrite(UNIDAD, 0);
  digitalWrite(DECENA, 0); 
  
  Serial.begin(9600); 
}

void digitos(int digito)//Correspondencia de cada dígito con 
 //el patrón de leds encendidos en el display.
{
  digitalWrite(A, LOW);
  digitalWrite(B, LOW);
  digitalWrite(C, LOW);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW);
  switch(digito)
  {
    case 0:
    {
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, HIGH);
      digitalWrite(E, HIGH);
      digitalWrite(F, HIGH);
      break;
    }
    case 1:
    {
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      break;
    }
    case 2:
    {
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(D, HIGH);
      digitalWrite(E, HIGH);
      digitalWrite(G, HIGH);
      break;
    }
    case 3:
    {
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, HIGH);
      digitalWrite(G, HIGH);
      break;
    }
    case 4:
    {
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(F, HIGH);
      digitalWrite(G, HIGH);
      break;
    }
    case 5:
    {
      digitalWrite(A, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, HIGH);
      digitalWrite(F, HIGH);
      digitalWrite(G, HIGH);
      break;
    }
    case 6:
    {
      digitalWrite(A, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, HIGH);
      digitalWrite(E, HIGH);
      digitalWrite(F, HIGH);
      digitalWrite(G, HIGH);
      break;
    }
    case 7:
    {
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      break;
    }
    case 8:
    {
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, HIGH);
      digitalWrite(E, HIGH);
      digitalWrite(F, HIGH);
      digitalWrite(G, HIGH);
      break;
    }
    case 9:
    {
      digitalWrite(A, HIGH);
      digitalWrite(B, HIGH);
      digitalWrite(C, HIGH);
      digitalWrite(D, HIGH);
      digitalWrite(F, HIGH);
      digitalWrite(G, HIGH);
      break;
    }
  }
}
int presionar()//Amortiguador de los pulsadores: Evita que por la rapidez
// de la ejecución del programa se detecte más de una pulsación por vez cuando se
//presiona un botón.
{
  incremento = digitalRead(PULSADOR_INCREMENTO);
  decremento = digitalRead(PULSADOR_DECREMENTO);
  reset = digitalRead(PULSADOR_RESET);
  
  if(incremento)
  {
    incremento_antes = 1;
  }
   if(decremento)
  {
    decremento_antes = 1;
  }
   if(reset)
  {
    reset_antes = 1;
  }
  if(incremento == 0 && incremento != incremento_antes)
  {
    incremento_antes = incremento;
    return PULSADOR_INCREMENTO;
  }
  else if(decremento == 0 && decremento != decremento_antes)
  {
    decremento_antes = decremento;
    return PULSADOR_DECREMENTO;
  }
  else if(reset == 0 && reset != reset_antes)
  {
    reset_antes = reset;
    return PULSADOR_RESET;
  }
  else
  {
    return 0;
  } 
}
 
void displays(int digito)//Muestra el valor de la variable dígito en los displays
//mediante el método de multiplexación de displays. Encender secuencialmente
// los displays de manera que para el ojo humano parecen encendidos simultánemante.
{
  digitalWrite(UNIDAD, HIGH);//Ambos displays apagados.
  digitalWrite(DECENA, HIGH);  
  digitos(digito/10);//Dígito que va en el lugar de las decenas.
  
  digitalWrite(DECENA, LOW); //solo display DECENA encendido.
  delay(10);
  digitalWrite(DECENA, HIGH);//Ambos displays apagados.
  
  digitos(digito - 10*((int)digito/10));//Dígito que va en el lugar de las unidades.
  digitalWrite(UNIDAD, LOW);//Solo display UNIDAD encendido.
  digitalWrite(DECENA, HIGH);
  delay(10);
  
}

void loop()
{
  int pulsador_presionado = presionar();//Aloja el valor del botón que se presionó.
  if(pulsador_presionado == PULSADOR_INCREMENTO)//Esta secuencia else if lleva
    //la cuenta de la variable digito, que lleva el valor que se muestra en los displays.
  {
    if(digito == 99)
    {
      digito = 0;
    }
    else
    {
      digito ++;
    }
  }
  else if(pulsador_presionado == PULSADOR_DECREMENTO)
  {
    if(digito == 0)
    {
      digito = 99;
    }
    else
    {
      digito --;
    }
  }
  else if(pulsador_presionado == PULSADOR_RESET)
  {
    digito = 0;
  }
  
  displays(digito); //Llamada a la funcion displays.
  Serial.print(PULSADOR_INCREMENTO);
}
